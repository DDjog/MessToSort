import os
import shutil
from concurrent.futures import ThreadPoolExecutor

Extensions = {
    "images" : ("JPEG", "JPG", "PNG"),
    "videos" : ("AVI", "MP4", "MOV"),
    "documents" : ("DOC", "DOCX", "TXT"),
    "audio" : ("MP3", "OGG", "WAV"),
    "archives" : ("ZIP", "GZ")
}


def list_and_sort(mess_folder_path):
    if not os.path.exists(mess_folder_path):
        os.mkdir(mess_folder_path)
        for item in os.listdir(mess_folder_path): # iteruję po elementach katalogu mess_folder
            if os.path.isfile(os.path.join(mess_folder_path, item)):# czy to co sprawdzam jest plikiem
                file_extension = item.split(".")[-1].upper() # rozdzielam aby dostać rozzszerzenie i zamieniam na dużą literę
                for category, extension in Extensions.items(): # iteruję po elementach cat-ext w Extensions
                    if file_extension in extension: # czy rozszerzenie sprawdzanego pliku jest w Extensions
                        category_folder_path = os.path.join(mess_folder_path, category) # tworzę śceżkę dostępu do katalodu kategorii
                        os.mkdir(category_folder_path) # tworzę katalog kategorii
                        file_path = os.path.join(mess_folder_path, item) # definuję ścieżkę danego elementu w mess_folder
                        new_file_path = os.path.join(category_folder_path, item) # definiuję ścieżkę danego elementu w nowym katalogu kategorii
                        shutil.move(file_path, new_file_path) # przenoszę plik/element do nowego katalogu kategorii

def execution(mess_folder_path):
    if os.path.isdir(mess_folder_path):
        list_and_sort(mess_folder_path)
        with ThreadPoolExecutor(max_workers==5) as executor:
            for item in os.dirlist(mess_folder_path):
                sub_folder_path = os.path.join( mess_folder_path, item)
                if os.path.isdir(sub_folder_path):
                    executor.submit(execution, sub_folder_path)

L_and_S = list_and_sort("/Users/Dorota/Documents/MessDir")
exec = execution("Users/Dorota/Documents/MessDir")
