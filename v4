import os
import shutil
from concurrent.futures import ThreadPoolExecutor

Extensions = {
    "images" : ("JPEG", "JPG", "PNG"),
    "videos" : ("AVI", "MP4", "MOV"),
    "documents" : ("DOC", "DOCX", "TXT"),
    "audio" : ("MP3", "OGG", "WAV"),
    "archives" : ("ZIP", "GZ")
}
InverseExtensions = {
    "JPEG": "images",
    "JPG": "images",
    "PNG": "images",

    "AVI": "videos",
    "MP4": "videos",
    "MOV": "videos",

    "DOCX": "documents",
    "DOC": "documents",
    "TXT": "documents",

    "MP3": "audio",
    "OGG": "audio",
    "WAV": "audio",

    "ZIP": "archives",
    "GZ": "archives"
}


def list_and_sort(mess_folder_path):
    if os.path.exists(mess_folder_path):
        files_by_type = {ext: [] for ext in Extensions.keys()}
        files_without_type_list = []
        dirs_list = []

        for item in os.listdir(mess_folder_path):
            item_path = os.path.join(mess_folder_path, item)
            if os.path.isfile(item_path):
                file_extension = item.split(".")[-1].upper()
                if file_extension in InverseExtensions:
                    category = InverseExtensions[file_extension]
                    files_by_type[category].append(item_path)
                else:
                    files_without_type_list.append(item_path)
            elif os.path.isdir(item_path):
                dirs_list.append(item_path)

       
        for category, files in files_by_type.items():
            category_path = os.path.join(mess_folder_path, category)
            if not os.path.exists(category_path):
                os.mkdir(category_path)
            for file_path in files:
                shutil.move(file_path, os.path.join(category_path, os.path.basename(file_path)))

        return files_by_type, files_without_type_list, dirs_list

def execution(mess_folder_path):
    if os.path.isdir(mess_folder_path):
        list_and_sort(mess_folder_path)
        with ThreadPoolExecutor(max_workers=5) as executor:
            for item in os.listdir(mess_folder_path):
                sub_folder_path = os.path.join(mess_folder_path, item)
                if os.path.isdir(sub_folder_path):
                    executor.submit(execution, sub_folder_path)

execution("/Users/Dorota/Documents/MessDir")
